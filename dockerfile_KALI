# #####################################################
# LABO KALI - LAB1 - IMAGE KALI
# #####################################################
#
# Ce Dockerfile construit une image Docker de Kali Linux
# avec l'environnement de bureau XFCE accessible via RDP
# avec les méta-paquets "core" par défaut (variable KALI_PKG)
# avec un accès SSH et systemd
# avec la création d'un utilisateur non root
# avec l'installation de ssh-mitm

FROM kalilinux/kali-rolling

ARG USERNAME
ARG USERPASS
ARG KALI_PKG
ENV META_KALI_PKG=kali-linux-${KALI_PKG}
ENV container docker
ENV LANG=fr_FR.UTF-8 

# Installation des paquets
RUN apt update -q --fix-missing \
    && apt upgrade -y \
    && DEBIAN_FRONTEND=noninteractive apt -y install --no-install-recommends \
    sudo \
    vim \
    nano \
    wget \
    curl \
    git \
    iproute2 \
    iputils-ping \
    iputils-tracepath \
    net-tools \
    dnsutils \
    iptables \
    conntrack \
    dbus-x11 \
    xinit \
    openssh-server \
    locales \
    xorg \
    xorgxrdp \
    xrdp \
    systemd \
    systemd-sysv \
    kali-desktop-xfce \
    kali-desktop-core \
    ${META_KALI_PKG} \
    ettercap-graphical \
    wireshark \
    nmap \
    apparmor \
    autoconf \
    build-essential \
    zlib1g-dev \
    psmisc \
    gpg

# Configuration de la Timezone Europe/Paris et des locales 
RUN rm /etc/localtime \
    && ln -s /usr/share/zoneinfo/Europe/Paris /etc/localtime \
    && dpkg-reconfigure --frontend noninteractive tzdata \
    && sed -i 's/# fr_FR.UTF-8 UTF-8/fr_FR.UTF-8 UTF-8/' /etc/locale.gen \
    && echo 'LANG=${LANG}'>/etc/default/locale \
    && dpkg-reconfigure --frontend=noninteractive locales \
    && update-locale LANG=${LANG}

# Configuration de systemd
RUN rm -f /lib/systemd/system/multi-user.target.wants/*;\
    rm -f /etc/systemd/system/*.wants/*;\
    rm -f /lib/systemd/system/local-fs.target.wants/*; \
    rm -f /lib/systemd/system/sockets.target.wants/*udev*; \
    rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \
    rm -f  /lib/systemd/system/sysinit.target.wants/systemd-tmpfiles-setup*;\
    rm -f /lib/systemd/system/systemd-update-utmp*;

RUN systemctl set-default multi-user.target

# Activation de SSH
RUN systemctl enable ssh.service

# Activation de RDP
RUN systemctl enable xrdp.service

# Activation de apparmor (nécessaire pour ssh-mitm)
RUN systemctl enable apparmor

# Déclaration des ports exposés
EXPOSE 22/tcp
EXPOSE 3389/tcp

# Creation d'un utilisateur "non root"
RUN useradd -m -s /bin/bash -G sudo ${USERNAME} \
    && echo "${USERNAME}:${USERPASS}" | chpasswd

RUN adduser xrdp ssl-cert \
    && echo xfce4-session > /home/${USERNAME}/.xsession \
    && chown ${USERNAME}.${USERNAME} /home/${USERNAME}/.xsession \
    && chmod +x /home/${USERNAME}/.xsession

# Désactivation du paramètre Xfce Power Management qui contrôle la gestion de l'alimentation de l'affichage
RUN rm /etc/xdg/autostart/xfce4-power-manager.desktop \
    && if [ -e /etc/xdg/xfce4/panel/default.xml ] ; \
    then \
    sed -i s/power/fail/ /etc/xdg/xfce4/panel/default.xml ; \
    fi

# Installation de ssh-mitm
# Pré-requis dû à une dépendance obsolète
RUN wget --no-check-certificate https://snapshot.debian.org/archive/debian-security/20220317T093342Z/pool/updates/main/o/openssl1.0/libssl1.0-dev_1.0.2u-1~deb9u7_amd64.deb \
    && wget --no-check-certificate https://snapshot.debian.org/archive/debian-security/20220317T093342Z/pool/updates/main/o/openssl1.0/libssl1.0.2_1.0.2u-1~deb9u7_amd64.deb \
    && dpkg -i libssl1.0.2_1.0.2u-1~deb9u7_amd64.deb \
    && dpkg -i libssl1.0-dev_1.0.2u-1~deb9u7_amd64.deb \
    && rm libssl1.0.2_1.0.2u-1~deb9u7_amd64.deb libssl1.0-dev_1.0.2u-1~deb9u7_amd64.deb
# Installation
WORKDIR /home/${USERNAME}
RUN git -c http.sslVerify=false clone https://github.com/ktux/ssh-mitm \
    && chown -R ${USERNAME}:${USERNAME} /home/${USERNAME}/ssh-mitm \
    && cd /home/${USERNAME}/ssh-mitm \
    && bash install.sh

# Clean APT
RUN apt clean \
    && rm -rf /var/lib/apt/lists/* \
    /var/log/alternatives.log \
    /var/log/apt/history.log \
    /var/log/apt/term.log \
    /var/log/dpkg.log \
    /tmp/* /var/tmp/*

# Autorisation de l'utilisateur pour l'utilisation de capture dans wireshark (mais ne fonctionne pas)
# On est toujours obligé de faire un dpkg-reconfigure wireshark-common
RUN sudo groupadd -r wireshark \
    && usermod -a -G wireshark ${USERNAME} \
    && newgrp wireshark

STOPSIGNAL SIGRTMIN+3

CMD [ "/lib/systemd/systemd", "log-level=info", "unit=sysinit.target" ]